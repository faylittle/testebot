const { ApplicationCommandType, ApplicationCommandOptionType } = require("discord.js");
const colors = require("../../utils/colors.js");

module.exports = {
    name: "8ball",
    description: "Ver informaÃ§Ãµes de registro alianÃ§a",
    type: ApplicationCommandType.ChatInput,
    options: [{
        name: "pergunta",
        description: "Informe sua pergunta",
        type: ApplicationCommandOptionType.String,
        required: true
    }],
    run: async (client, interaction) => {

        const question = interaction.options.getString("pergunta")

        const choices = [
            "Ã‰ certo.",
            "Toma no ku.",
            "Sem dÃºvida.",
            "Sim definitivamente.",
            "Como vou saber.",
            "A meu ver, sim.",
            "Provavelmente.",
            "Perspectivas boas.",
            "Sim.",
            "Sinais apontam que sim.",
            "Responder nebuloso, tente novamente.",
            "Pergunte novamente mais tarde.",
            "Melhor nÃ£o te dizer agora.",
            "NÃ£o Ã© possÃ­vel prever agora.",
            "Concentre-se e pergunte novamente.",
            "NÃ£o conte com isso.",
            "Minha resposta Ã© nÃ£o.",
            "Minhas fontes dizem nÃ£o.",
            "NÃ£o boto fÃ©.",
            "Muito duvidoso."
        ];

        interaction.reply({ content: "loanding..", ephemeral: true }).catch(() => { return; });
        const ball = Math.floor(Math.random() * choices.length);

        try {

            await interaction.channel.createWebhook({
                name: '.rimuru_san saiadinho ğŸ’ª',
                avatar: 'https://media.discordapp.net/attachments/1133047566787956816/1140971207404040193/70e3da8ff1c8b2fe096c2b998841ca09.png',
            }).then(webhook => webhook.send({ content: `ğŸ§  ${interaction.user}!\n- Pergunta: \`${question}\`\n- Resposta: *${choices[ball]}*` })).then(() => webhook.delete()).catch(() => { return; })

        } catch (e) {
            return interaction.reply({ content: "error" })
        }

    }
}
